// Generated by CIRCT firtool-1.62.1
// external module Ebreak

// VCS coverage exclude_file
module gr_16x32(
  input  [3:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [31:0] R0_data,
  input  [3:0]  R1_addr,
  input         R1_en,
                R1_clk,
  output [31:0] R1_data,
  input  [3:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [31:0] W0_data
);

  reg [31:0] Memory[0:15];
  always @(posedge W0_clk) begin
    if (W0_en & 1'h1)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 32'bx;
  assign R1_data = R1_en ? Memory[R1_addr] : 32'bx;
endmodule

module Core(
  input         clock,
                reset,
  output [31:0] io_imem_addr,
  input  [31:0] io_imem_inst,
  output [31:0] io_dmem_addr,
                io_dmem_data,
  output        io_dmem_wen,
  input  [31:0] io_dmem_rdata
);

  wire [31:0]      _gr_ext_R0_data;
  wire [31:0]      _gr_ext_R1_data;
  reg  [31:0]      pc;
  wire [31:0]      _wbData_T_2 = pc + 32'h4;
  wire [9:0]       _GEN = {io_imem_inst[14:12], io_imem_inst[6:0]};
  wire             _decoded_T_1 = _GEN == 10'h103;
  wire             _decoded_T_3 = _GEN == 10'h123;
  wire [16:0]      _GEN_0 = {io_imem_inst[31:25], io_imem_inst[14:12], io_imem_inst[6:0]};
  wire             _decoded_T_5 = _GEN_0 == 17'h33;
  wire             _decoded_T_7 = _GEN == 10'h13;
  wire             _decoded_T_9 = _GEN_0 == 17'h8033;
  wire             _decoded_T_11 = _GEN_0 == 17'h3B3;
  wire             _decoded_T_13 = _GEN_0 == 17'h333;
  wire             _decoded_T_15 = _GEN_0 == 17'h233;
  wire             _decoded_T_17 = _GEN == 10'h393;
  wire             _decoded_T_19 = _GEN == 10'h313;
  wire             _decoded_T_21 = _GEN == 10'h213;
  wire             _decoded_T_23 = _GEN_0 == 17'hB3;
  wire             _decoded_T_25 = _GEN_0 == 17'h2B3;
  wire             _decoded_T_27 = _GEN_0 == 17'h82B3;
  wire             _decoded_T_29 = _GEN_0 == 17'h93;
  wire             _decoded_T_31 = _GEN_0 == 17'h293;
  wire             _decoded_T_33 = _GEN_0 == 17'h8293;
  wire             _decoded_T_35 = _GEN_0 == 17'h133;
  wire             _decoded_T_37 = _GEN_0 == 17'h1B3;
  wire             _decoded_T_39 = _GEN == 10'h113;
  wire             _decoded_T_41 = _GEN == 10'h193;
  wire             _decoded_T_43 = io_imem_inst[6:0] == 7'h37;
  wire             _decoded_T_45 = io_imem_inst[6:0] == 7'h17;
  wire             _decoded_T_47 = _GEN == 10'h63;
  wire             _decoded_T_49 = _GEN == 10'hE3;
  wire             _decoded_T_51 = _GEN == 10'h2E3;
  wire             _decoded_T_53 = _GEN == 10'h3E3;
  wire             _decoded_T_55 = _GEN == 10'h263;
  wire             _decoded_T_57 = _GEN == 10'h363;
  wire             _decoded_T_59 = io_imem_inst[6:0] == 7'h6F;
  wire             _decoded_T_61 = _GEN == 10'h67;
  wire             _decoded_T_63 = io_imem_inst == 32'h73;
  wire             _GEN_1 = _decoded_T_43 | _decoded_T_45;
  wire [4:0]       exeFun =
    _decoded_T_1 | _decoded_T_3 | _decoded_T_5 | _decoded_T_7
      ? 5'h1
      : _decoded_T_9
          ? 5'h2
          : _decoded_T_11
              ? 5'h3
              : _decoded_T_13
                  ? 5'h4
                  : _decoded_T_15
                      ? 5'h5
                      : _decoded_T_17
                          ? 5'h3
                          : _decoded_T_19
                              ? 5'h4
                              : _decoded_T_21
                                  ? 5'h5
                                  : _decoded_T_23
                                      ? 5'h6
                                      : _decoded_T_25
                                          ? 5'h7
                                          : _decoded_T_27
                                              ? 5'h8
                                              : _decoded_T_29
                                                  ? 5'h6
                                                  : _decoded_T_31
                                                      ? 5'h7
                                                      : _decoded_T_33
                                                          ? 5'h8
                                                          : _decoded_T_35
                                                              ? 5'h9
                                                              : _decoded_T_37
                                                                  ? 5'hA
                                                                  : _decoded_T_39
                                                                      ? 5'h9
                                                                      : _decoded_T_41
                                                                          ? 5'hA
                                                                          : _GEN_1
                                                                              ? 5'h1
                                                                              : _decoded_T_47
                                                                                  ? 5'hB
                                                                                  : _decoded_T_49
                                                                                      ? 5'hC
                                                                                      : _decoded_T_51
                                                                                          ? 5'hE
                                                                                          : _decoded_T_53
                                                                                              ? 5'h10
                                                                                              : _decoded_T_55
                                                                                                  ? 5'hD
                                                                                                  : _decoded_T_57
                                                                                                      ? 5'hF
                                                                                                      : _decoded_T_59
                                                                                                          ? 5'h1
                                                                                                          : _decoded_T_61
                                                                                                              ? 5'h11
                                                                                                              : 5'h0;
  wire             _GEN_2 =
    _decoded_T_47 | _decoded_T_49 | _decoded_T_51 | _decoded_T_53 | _decoded_T_55
    | _decoded_T_57;
  wire             _GEN_3 = _decoded_T_39 | _decoded_T_41;
  wire [1:0]       op1Sel =
    _decoded_T_1 | _decoded_T_3 | _decoded_T_5 | _decoded_T_7 | _decoded_T_9
    | _decoded_T_11 | _decoded_T_13 | _decoded_T_15 | _decoded_T_17 | _decoded_T_19
    | _decoded_T_21 | _decoded_T_23 | _decoded_T_25 | _decoded_T_27 | _decoded_T_29
    | _decoded_T_31 | _decoded_T_33 | _decoded_T_35 | _decoded_T_37 | _GEN_3
      ? 2'h0
      : _decoded_T_43
          ? 2'h2
          : _decoded_T_45
              ? 2'h1
              : _GEN_2
                  ? 2'h0
                  : _decoded_T_59 ? 2'h1 : _decoded_T_61 ? 2'h0 : {_decoded_T_63, 1'h0};
  wire [1:0]       wbSel =
    _decoded_T_1
      ? 2'h1
      : _decoded_T_3 | _decoded_T_5 | _decoded_T_7 | _decoded_T_9 | _decoded_T_11
        | _decoded_T_13 | _decoded_T_15 | _decoded_T_17 | _decoded_T_19 | _decoded_T_21
        | _decoded_T_23 | _decoded_T_25 | _decoded_T_27 | _decoded_T_29 | _decoded_T_31
        | _decoded_T_33 | _decoded_T_35 | _decoded_T_37 | _decoded_T_39 | _decoded_T_41
        | _decoded_T_43 | _decoded_T_45 | _GEN_2
          ? 2'h0
          : {_decoded_T_59 | _decoded_T_61, 1'h0};
  wire [31:0]      op1Data =
    op1Sel == 2'h1
      ? pc
      : (|op1Sel) | io_imem_inst[19:15] == 5'h0 ? 32'h0 : _gr_ext_R1_data;
  wire [7:0][31:0] _GEN_4 =
    {{32'h0},
     {32'h0},
     {{io_imem_inst[31:12], 12'h0}},
     {{{12{io_imem_inst[31]}},
       io_imem_inst[19:12],
       io_imem_inst[20],
       io_imem_inst[30:21],
       1'h0}},
     {{{20{io_imem_inst[31]}}, io_imem_inst[31:25], io_imem_inst[11:7]}},
     {{{20{io_imem_inst[31]}}, io_imem_inst[31:20]}},
     {io_imem_inst[24:20] == 5'h0 ? 32'h0 : _gr_ext_R0_data},
     {32'h0}};
  wire [31:0]      op2Data =
    _GEN_4[_decoded_T_1
             ? 3'h2
             : _decoded_T_3
                 ? 3'h3
                 : _decoded_T_5
                     ? 3'h1
                     : _decoded_T_7
                         ? 3'h2
                         : _decoded_T_9 | _decoded_T_11 | _decoded_T_13 | _decoded_T_15
                             ? 3'h1
                             : _decoded_T_17 | _decoded_T_19 | _decoded_T_21
                                 ? 3'h2
                                 : _decoded_T_23 | _decoded_T_25 | _decoded_T_27
                                     ? 3'h1
                                     : _decoded_T_29 | _decoded_T_31 | _decoded_T_33
                                         ? 3'h2
                                         : _decoded_T_35 | _decoded_T_37
                                             ? 3'h1
                                             : _GEN_3
                                                 ? 3'h2
                                                 : _GEN_1
                                                     ? 3'h5
                                                     : _GEN_2
                                                         ? 3'h1
                                                         : _decoded_T_59
                                                             ? 3'h4
                                                             : _decoded_T_61
                                                                 ? 3'h2
                                                                 : {2'h0,
                                                                    ~_decoded_T_63}];
  wire [31:0]      _aluOut_T_32 = op1Data + op2Data;
  wire [62:0]      _aluOut_T_14 = {31'h0, op1Data} << op2Data[4:0];
  wire [31:0]      _GEN_5 = {27'h0, op2Data[4:0]};
  wire             _brFlag_T_13 = op1Data < op2Data;
  wire [31:0]      _aluOut_T_48 =
    exeFun == 5'h1
      ? _aluOut_T_32
      : exeFun == 5'h2
          ? op1Data - op2Data
          : exeFun == 5'h3
              ? op1Data & op2Data
              : exeFun == 5'h4
                  ? op1Data | op2Data
                  : exeFun == 5'h5
                      ? op1Data ^ op2Data
                      : exeFun == 5'h6
                          ? _aluOut_T_14[31:0]
                          : exeFun == 5'h7
                              ? op1Data >> _GEN_5
                              : exeFun == 5'h8
                                  ? $signed($signed(op1Data) >>> _GEN_5)
                                  : exeFun == 5'h9
                                      ? {31'h0, $signed(op1Data) < $signed(op2Data)}
                                      : exeFun == 5'hA
                                          ? {31'h0, _brFlag_T_13}
                                          : exeFun == 5'h11
                                              ? _aluOut_T_32 & 32'hFFFFFFFE
                                              : exeFun == 5'h12 ? op1Data : 32'h0;
  wire [3:0][31:0] _GEN_6 = {{_aluOut_T_48}, {_wbData_T_2}, {io_dmem_rdata}, {32'h0}};
  always @(posedge clock) begin
    if (reset)
      pc <= 32'h80000000;
    else if (exeFun == 5'hB
               ? op1Data == op2Data
               : exeFun == 5'hC
                   ? op1Data != op2Data
                   : exeFun == 5'hD
                       ? $signed(op1Data) < $signed(op2Data)
                       : exeFun == 5'hE
                           ? $signed(op1Data) >= $signed(op2Data)
                           : exeFun == 5'hF
                               ? _brFlag_T_13
                               : exeFun == 5'h10 & op1Data >= op2Data)
      pc <=
        pc
        + {{20{io_imem_inst[31]}},
           io_imem_inst[7],
           io_imem_inst[30:25],
           io_imem_inst[11:8],
           1'h0};
    else if (wbSel == 2'h2)
      pc <= _aluOut_T_48;
    else if (io_imem_inst == 32'h73)
      pc <= 32'h80000000;
    else
      pc <= _wbData_T_2;
  end // always @(posedge)
  gr_16x32 gr_ext (
    .R0_addr (io_imem_inst[23:20]),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (_gr_ext_R0_data),
    .R1_addr (io_imem_inst[18:15]),
    .R1_en   (1'h1),
    .R1_clk  (clock),
    .R1_data (_gr_ext_R1_data),
    .W0_addr (io_imem_inst[10:7]),
    .W0_en   (1'h1),
    .W0_clk  (clock),
    .W0_data (_GEN_6[wbSel])
  );
  Ebreak ebreak (
    .instruction (io_imem_inst)
  );
  assign io_imem_addr = pc;
  assign io_dmem_addr = _aluOut_T_48;
  assign io_dmem_data = op2Data;
  assign io_dmem_wen = ~_decoded_T_1 & _decoded_T_3;
endmodule

// VCS coverage exclude_file
module mem_2415919104x8(
  input  [31:0] R0_addr,
  input         R0_en,
                R0_clk,
  output [7:0]  R0_data,
  input  [31:0] R1_addr,
  input         R1_en,
                R1_clk,
  output [7:0]  R1_data,
  input  [31:0] R2_addr,
  input         R2_en,
                R2_clk,
  output [7:0]  R2_data,
  input  [31:0] R3_addr,
  input         R3_en,
                R3_clk,
  output [7:0]  R3_data,
  input  [31:0] R4_addr,
  input         R4_en,
                R4_clk,
  output [7:0]  R4_data,
  input  [31:0] R5_addr,
  input         R5_en,
                R5_clk,
  output [7:0]  R5_data,
  input  [31:0] R6_addr,
  input         R6_en,
                R6_clk,
  output [7:0]  R6_data,
  input  [31:0] R7_addr,
  input         R7_en,
                R7_clk,
  output [7:0]  R7_data,
  input  [31:0] W0_addr,
  input         W0_en,
                W0_clk,
  input  [7:0]  W0_data,
  input  [31:0] W1_addr,
  input         W1_en,
                W1_clk,
  input  [7:0]  W1_data,
  input  [31:0] W2_addr,
  input         W2_en,
                W2_clk,
  input  [7:0]  W2_data,
  input  [31:0] W3_addr,
  input         W3_en,
                W3_clk,
  input  [7:0]  W3_data
);

  reg [7:0] Memory[0:2415919103];
  always @(posedge W0_clk) begin
    if (W0_en & 1'h1)
      Memory[W0_addr] <= W0_data;
    if (W1_en & 1'h1)
      Memory[W1_addr] <= W1_data;
    if (W2_en & 1'h1)
      Memory[W2_addr] <= W2_data;
    if (W3_en & 1'h1)
      Memory[W3_addr] <= W3_data;
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;
  assign R1_data = R1_en ? Memory[R1_addr] : 8'bx;
  assign R2_data = R2_en ? Memory[R2_addr] : 8'bx;
  assign R3_data = R3_en ? Memory[R3_addr] : 8'bx;
  assign R4_data = R4_en ? Memory[R4_addr] : 8'bx;
  assign R5_data = R5_en ? Memory[R5_addr] : 8'bx;
  assign R6_data = R6_en ? Memory[R6_addr] : 8'bx;
  assign R7_data = R7_en ? Memory[R7_addr] : 8'bx;
endmodule

module Memory(
  input         clock,
  input  [31:0] io_imem_addr,
  output [31:0] io_imem_inst,
  input  [31:0] io_dmem_addr,
                io_dmem_data,
  input         io_dmem_wen,
  output [31:0] io_dmem_rdata
);

  wire [7:0] _mem_ext_R0_data;
  wire [7:0] _mem_ext_R1_data;
  wire [7:0] _mem_ext_R2_data;
  wire [7:0] _mem_ext_R3_data;
  wire [7:0] _mem_ext_R4_data;
  wire [7:0] _mem_ext_R5_data;
  wire [7:0] _mem_ext_R6_data;
  wire [7:0] _mem_ext_R7_data;
  mem_2415919104x8 mem_ext (
    .R0_addr (io_imem_addr + 32'h3),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (_mem_ext_R0_data),
    .R1_addr (io_imem_addr + 32'h2),
    .R1_en   (1'h1),
    .R1_clk  (clock),
    .R1_data (_mem_ext_R1_data),
    .R2_addr (io_imem_addr + 32'h1),
    .R2_en   (1'h1),
    .R2_clk  (clock),
    .R2_data (_mem_ext_R2_data),
    .R3_addr (io_imem_addr),
    .R3_en   (1'h1),
    .R3_clk  (clock),
    .R3_data (_mem_ext_R3_data),
    .R4_addr (io_dmem_addr + 32'h3),
    .R4_en   (1'h1),
    .R4_clk  (clock),
    .R4_data (_mem_ext_R4_data),
    .R5_addr (io_dmem_addr + 32'h2),
    .R5_en   (1'h1),
    .R5_clk  (clock),
    .R5_data (_mem_ext_R5_data),
    .R6_addr (io_dmem_addr + 32'h1),
    .R6_en   (1'h1),
    .R6_clk  (clock),
    .R6_data (_mem_ext_R6_data),
    .R7_addr (io_dmem_addr),
    .R7_en   (1'h1),
    .R7_clk  (clock),
    .R7_data (_mem_ext_R7_data),
    .W0_addr (io_dmem_addr + 32'h3),
    .W0_en   (io_dmem_wen),
    .W0_clk  (clock),
    .W0_data (io_dmem_data[31:24]),
    .W1_addr (io_dmem_addr + 32'h2),
    .W1_en   (io_dmem_wen),
    .W1_clk  (clock),
    .W1_data (io_dmem_data[23:16]),
    .W2_addr (io_dmem_addr + 32'h1),
    .W2_en   (io_dmem_wen),
    .W2_clk  (clock),
    .W2_data (io_dmem_data[15:8]),
    .W3_addr (io_dmem_addr),
    .W3_en   (io_dmem_wen),
    .W3_clk  (clock),
    .W3_data (io_dmem_data[7:0])
  );
  assign io_imem_inst =
    {_mem_ext_R3_data, _mem_ext_R2_data, _mem_ext_R1_data, _mem_ext_R0_data};
  assign io_dmem_rdata =
    {_mem_ext_R7_data, _mem_ext_R6_data, _mem_ext_R5_data, _mem_ext_R4_data};
endmodule

module Top(
  input clock,
        reset
);

  wire [31:0] _mem_io_imem_inst;
  wire [31:0] _mem_io_dmem_rdata;
  wire [31:0] _core_io_imem_addr;
  wire [31:0] _core_io_dmem_addr;
  wire [31:0] _core_io_dmem_data;
  wire        _core_io_dmem_wen;
  Core core (
    .clock         (clock),
    .reset         (reset),
    .io_imem_addr  (_core_io_imem_addr),
    .io_imem_inst  (_mem_io_imem_inst),
    .io_dmem_addr  (_core_io_dmem_addr),
    .io_dmem_data  (_core_io_dmem_data),
    .io_dmem_wen   (_core_io_dmem_wen),
    .io_dmem_rdata (_mem_io_dmem_rdata)
  );
  Memory mem (
    .clock         (clock),
    .io_imem_addr  (_core_io_imem_addr),
    .io_imem_inst  (_mem_io_imem_inst),
    .io_dmem_addr  (_core_io_dmem_addr),
    .io_dmem_data  (_core_io_dmem_data),
    .io_dmem_wen   (_core_io_dmem_wen),
    .io_dmem_rdata (_mem_io_dmem_rdata)
  );
endmodule


// ----- 8< ----- FILE "./Ebreak.v" ----- 8< -----

module Ebreak (
    input [31:0] instruction
);
    import "DPI-C" function void halt();
    always @(*) begin
        if (instruction == 32'b00000000000100000000000001110011) begin
            halt();
        end
    end
endmodule

// ----- 8< ----- FILE "firrtl_black_box_resource_files.f" ----- 8< -----

Ebreak.v
